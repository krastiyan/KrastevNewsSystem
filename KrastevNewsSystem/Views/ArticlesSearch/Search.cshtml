@using KrastevNewsSystem.Models
@{
    ViewBag.Title = "Articles Search Results Page - List of all found articles follows...";

}

@model IEnumerable<NewsArticleViewModel>

<h1>@ViewBag.Title</h1>

@if (Model == null || Model.Count() < 1)
{
    <h3>No articles found - check better your criteria ;-)</h3>
}
else
{
    foreach (var article in Model)
    {
        <div class="jumbotron">
            <h1 class="text-center">@article.Title</h1>
            <div>Created by: @article.ArticleAuthor - goodman :)</div>
            <p>
                @article.Content
            </p>
            <br />
            @Html.ActionLink("View_Article_Keywrods", "Index", "ArticleTagging", new { theArticleID = article.ArticleID }, null)
            @Html.ActionLink("Comment article", "Create", "ArticleComment", new { commentedPostID = article.ArticleID }, null)

            <br /><span>Comments on this article:</span><br />
            @foreach (var comment in article.Comments)
            {
                if (comment.CommentRepliedTo != null)
                {
                    <div>
                        In reply to: @comment.CommentRepliedTo.CommentAuthor.UserName since: @comment.CommentRepliedTo.PostedOn
                    </div>
                }
                <div>
                    @Html.LabelFor(c => comment.CommentAuthor)
                    @Html.DisplayTextFor(c => comment.CommentAuthor.UserName)
                    @*By @comment.CommentAuthor.UserName made @comment.PostedOn*@
                    <br />
                    @Html.LabelFor(c => comment.PostedOn)
                    @Html.DisplayTextFor(c => comment.PostedOn)
                </div>
                <p>
                    @comment.Content
                </p>
                <div>
                    <span>
                        @Html.ActionLink("Reply to Comment", "Reply", "ArticleComment", new { commentedPostID = article.ArticleID, commentID = comment.Id }, null)
                    </span>
                    <span>
                        @Html.ActionLink("Delete Comment", "Delete", "ArticleComment", new { commentID = comment.Id }, null)
                    </span>
                </div>
            }
        </div>
    }
}@*end of else*@